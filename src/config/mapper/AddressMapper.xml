<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cake.dao.AddressMapper">
  <resultMap id="BaseResultMap" type="com.cake.bean.Address">
    <id column="AddressId" jdbcType="INTEGER" property="addressid" />
    <result column="UsrCountry" jdbcType="VARCHAR" property="usrcountry" />
    <result column="UsrProvince" jdbcType="VARCHAR" property="usrprovince" />
    <result column="UsrCity" jdbcType="VARCHAR" property="usrcity" />
    <result column="UsrEmail" jdbcType="VARCHAR" property="usremail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    AddressId, UsrCountry, UsrProvince, UsrCity, UsrEmail
  </sql>
  <select id="selectByExample" parameterType="com.cake.bean.AddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Address
    where AddressId = #{addressid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Address
    where AddressId = #{addressid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cake.bean.AddressExample">
    delete from Address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cake.bean.Address">
    insert into Address (AddressId, UsrCountry, UsrProvince, 
      UsrCity, UsrEmail)
    values (#{addressid,jdbcType=INTEGER}, #{usrcountry,jdbcType=VARCHAR}, #{usrprovince,jdbcType=VARCHAR}, 
      #{usrcity,jdbcType=VARCHAR}, #{usremail,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cake.bean.Address">
    insert into Address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="addressid != null">
        AddressId,
      </if>
      <if test="usrcountry != null">
        UsrCountry,
      </if>
      <if test="usrprovince != null">
        UsrProvince,
      </if>
      <if test="usrcity != null">
        UsrCity,
      </if>
      <if test="usremail != null">
        UsrEmail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="addressid != null">
        #{addressid,jdbcType=INTEGER},
      </if>
      <if test="usrcountry != null">
        #{usrcountry,jdbcType=VARCHAR},
      </if>
      <if test="usrprovince != null">
        #{usrprovince,jdbcType=VARCHAR},
      </if>
      <if test="usrcity != null">
        #{usrcity,jdbcType=VARCHAR},
      </if>
      <if test="usremail != null">
        #{usremail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cake.bean.AddressExample" resultType="java.lang.Long">
    select count(*) from Address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Address
    <set>
      <if test="record.addressid != null">
        AddressId = #{record.addressid,jdbcType=INTEGER},
      </if>
      <if test="record.usrcountry != null">
        UsrCountry = #{record.usrcountry,jdbcType=VARCHAR},
      </if>
      <if test="record.usrprovince != null">
        UsrProvince = #{record.usrprovince,jdbcType=VARCHAR},
      </if>
      <if test="record.usrcity != null">
        UsrCity = #{record.usrcity,jdbcType=VARCHAR},
      </if>
      <if test="record.usremail != null">
        UsrEmail = #{record.usremail,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Address
    set AddressId = #{record.addressid,jdbcType=INTEGER},
      UsrCountry = #{record.usrcountry,jdbcType=VARCHAR},
      UsrProvince = #{record.usrprovince,jdbcType=VARCHAR},
      UsrCity = #{record.usrcity,jdbcType=VARCHAR},
      UsrEmail = #{record.usremail,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cake.bean.Address">
    update Address
    <set>
      <if test="usrcountry != null">
        UsrCountry = #{usrcountry,jdbcType=VARCHAR},
      </if>
      <if test="usrprovince != null">
        UsrProvince = #{usrprovince,jdbcType=VARCHAR},
      </if>
      <if test="usrcity != null">
        UsrCity = #{usrcity,jdbcType=VARCHAR},
      </if>
      <if test="usremail != null">
        UsrEmail = #{usremail,jdbcType=VARCHAR},
      </if>
    </set>
    where AddressId = #{addressid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cake.bean.Address">
    update Address
    set UsrCountry = #{usrcountry,jdbcType=VARCHAR},
      UsrProvince = #{usrprovince,jdbcType=VARCHAR},
      UsrCity = #{usrcity,jdbcType=VARCHAR},
      UsrEmail = #{usremail,jdbcType=VARCHAR}
    where AddressId = #{addressid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.cake.bean.Address">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phoneNumber" jdbcType="INTEGER" property="phonenumber" />
    <result column="userID" jdbcType="INTEGER" property="userid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, address, phoneNumber, userID
  </sql>
  <select id="selectByExample" parameterType="com.cake.bean.AddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.cake.bean.AddressExample">
    delete from Address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cake.bean.Address">
    insert into Address (id, address, phoneNumber, 
      userID)
    values (#{id,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{phonenumber,jdbcType=INTEGER}, 
      #{userid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cake.bean.Address">
    insert into Address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phonenumber != null">
        phoneNumber,
      </if>
      <if test="userid != null">
        userID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cake.bean.AddressExample" resultType="java.lang.Long">
    select count(*) from Address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Address
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenumber != null">
        phoneNumber = #{record.phonenumber,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Address
    set id = #{record.id,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      phoneNumber = #{record.phonenumber,jdbcType=INTEGER},
      userID = #{record.userid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>